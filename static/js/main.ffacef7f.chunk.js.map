{"version":3,"sources":["components/Header.js","models/cats.js","components/CatView.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","repo","cats","id","name","nickname","src","concat","window","location","origin","age","clicks","CatView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","incrementClickCount","setState","state","clicksInput","index","handleNameChange","event","nameInput","target","value","handleSrcChange","srcInput","handleClicksChange","openAdmin","admin","saveAdmin","Number","closeAdmin","bind","assertThisInitialized","nextProps","width","alt","onClick","style","backgroundColor","color","type","onChange","map","cat","key","Main","setCat","catIndex","_this2","components_CatView","App","components_Header","components_Main","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffacef7f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <h1>Cat Clicker</h1>\n            </div>\n        );\n    }\n}\n\nexport default Header;","const repo=\"catclickreact\";\n\nconst cats = [\n    {\n        id: 'cat1',\n        name: 'Tony',\n        nickname:'Ironman',\n        src: `${window.location.origin}/${repo}/images/cat1.jpg`,\n        age:0,\n        clicks: 0\n    },\n    {\n        id: 'cat2',\n        name: 'Steve',\n        nickname:'Cap',\n        src: `${window.location.origin}/${repo}/images/cat2.jpg`,\n        age:0,\n        clicks: 0\n    },\n    {\n        id: 'cat3',\n        name: 'Bruce',\n        nickname:'Hulk',\n        src: `${window.location.origin}/${repo}/images/cat3.jpg`,\n        age:0,\n        clicks: 0\n    },\n    {\n        id: 'cat4',\n        name: 'Natasha',\n        nickname:'B.Widow',\n        src: `${window.location.origin}/${repo}/images/cat4.jpg`,\n        age:0,\n        clicks: 0\n    },\n    {\n        id: 'cat5',\n        name: 'Clint',\n        nickname:'Hawkeye',\n        src: `${window.location.origin}/${repo}/images/cat5.jpg`,\n        age:0,\n        clicks: 0\n    }\n];\n\nexport default cats;","import React, { Component } from 'react';\nimport cats from '../models/cats';\nimport '../App.css';\nimport '../appgal.css';\n\nclass CatView extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: this.props.name,\n            nickname:this.props.nickname,\n            src: this.props.src,\n            clicks: this.props.clicks,\n            age:this.props.age,\n            admin: false,\n            nameInput: this.props.name,\n            srcInput: this.props.src,\n            clicksInput: this.props.clicks\n        };\n\n        this.incrementClickCount = this.incrementClickCount.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleSrcChange = this.handleSrcChange.bind(this);\n        this.handleClicksChange = this.handleClicksChange.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.name !== nextProps.name) {\n            this.setState({\n                name: nextProps.name,\n                nickname: nextProps.nickname,\n                src: nextProps.src,\n                clicks: nextProps.clicks,\n                age:nextProps.age,\n                nameInput: nextProps.name,\n                srcInput: nextProps.src,\n                clicksInput: nextProps.clicks\n            });\n        }\n    }\n\n    incrementClickCount = () => {\n        this.setState({\n            clicks: this.state.clicks + 1,\n            age: this.state.age + 1,\n            clicksInput: this.state.clicks + 1,\n        \n        });\n        cats[this.props.index].clicks = this.state.clicks + 1;\n        cats[this.props.index].age = this.state.age + 1;\n    }\n\n    handleNameChange = (event) => {\n        this.setState({\n            nameInput: event.target.value\n        });\n    }\n\n    handleSrcChange = (event) => {\n        this.setState({\n            srcInput: event.target.value\n        });\n    }\n\n    handleClicksChange = (event) => {\n        this.setState({\n            clicksInput: event.target.value,\n            age:event.target.value\n    });}\n\n    openAdmin = () => {\n        this.setState({\n            admin: true\n        });\n    }\n\n    saveAdmin = () => {\n        this.setState({\n            name: this.state.nameInput,\n            src: this.state.srcInput,\n            clicks: Number(this.state.clicksInput),\n            age:Number(this.state.age),\n            admin: false\n        });\n    }\n\n    closeAdmin = () => {\n        this.setState({\n            admin: false\n        });\n    }\n\n    render() {\n        if (this.state.admin) {\n            return (\n                <div className=\"display\">\n                    <h3>Close Your Cat</h3>\n                    <div className=\"cat\">\n                        <p className=\"cat-name\">Name:{this.state.name}</p>\n                        <p className=\"cat-name\">Nickname:{this.state.nickname}</p>\n                        <img src={this.state.src} width=\"360px\" id=\"cat-img\" alt=\"Cat\" onClick={this.incrementClickCount} />\n                        <p id=\"cat-clicks\">Clicks: {this.state.clicks}</p>\n                    </div>\n                    <button  style={{backgroundColor: \"burlywood\",color:\"lightblue\"}} id=\"admin-btn\" onClick={this.openAdmin}>Portal</button>\n                    <div id=\"admin-form\">\n                        <div className=\"form-unit\">\n                            <p className=\"form-label\">Name: </p>\n                            <input type=\"text\" id=\"admin-name\" onChange={this.handleNameChange} value={this.state.nameInput} />\n                        </div>\n                        <div className=\"form-unit\">\n                            <p className=\"form-label\">Image URL: </p>\n                            <input type=\"text\" id=\"admin-imgUrl\" onChange={this.handleSrcChange} value={this.state.srcInput} />\n                        </div>\n                        <div className=\"form-unit\">\n                            <p className=\"form-label\">Clicks: </p>\n                            <input type=\"number\" id=\"admin-clicks\" onChange={this.handleClicksChange} value={this.state.clicksInput} />\n                        </div>\n                        <div className=\"form-unit\">\n                            <button className=\"form-btn\" id=\"admin-save\" onClick={this.saveAdmin}>Save</button>\n                            <button className=\"form-btn\" id=\"admin-cancel\" onClick={this.closeAdmin}>Cancel</button>\n                        </div>\n                    </div>\n\n\n                    <div className=\"container\">\n                   \n                   \n                    { cats.map((cat, index) => <div><img src={cat.src} key={cat.id}/><p className=\"galcount\">{cat.clicks}</p></div>) }\n                   \n                </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"display\">\n                    <h3>Click Your Cat</h3>\n                    <div className=\"cat\">\n                        <p className=\"cat-name\">Name:{this.state.name}</p>\n                        <p className=\"cat-name\">Nickname:{this.state.nickname}</p>\n                        <img src={this.state.src} width=\"360px\" id=\"cat-img\" alt=\"Cat\" onClick={this.incrementClickCount} />\n                        <p id=\"cat-clicks\">Clicks:<span id=\"cat-clicks-span\"> {this.state.clicks}</span></p>\n                        <p id=\"cat-age\">Age:<span id=\"cat-age-span\"> {this.state.age}</span></p>\n            \n                    </div>\n                    <button id=\"admin-btn\" onClick={this.openAdmin}>Open New Form</button>\n\n                    <div className=\"container\">\n                   \n                   \n            { cats.map((cat, index) => <div><img src={cat.src} key={cat.id}/><p className=\"galcount\">{cat.name}:{cat.clicks}</p></div>) }\n                   \n                </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default CatView;","import React, { Component } from 'react';\nimport cats from '../models/cats';\nimport CatView from '../components/CatView';\nimport Gallery from '../components/Gallery';\nimport '../App.css';\nimport '../appgal.css';\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: cats[0].id,\n            name: cats[0].name,\n            nickname: cats[0].nickname,\n            src: cats[0].src,\n            clicks: cats[0].clicks,\n            age:cats[0].age,\n            catIndex: 0\n        };\n    }\n\n    setCat = (catIndex) => {\n        this.setState({\n            id: cats[catIndex].id,\n            name: cats[catIndex].name,\n            nickname: cats[catIndex].nickname,\n            src: cats[catIndex].src,\n            clicks: cats[catIndex].clicks,\n            age:cats[catIndex].age,\n            catIndex: catIndex\n        });\n    }\n\n    render() {\n        return (\n\n           \n            <div className=\"main\">\n                <div className=\"navbar\">\n                    <p>Select Your Cat</p>\n                    <ul className=\"cat-names\">\n                    { cats.map((cat, index) => <li key={cat.id}><button id={cat.id} onClick={this.setCat.bind(this, index)}>{cat.name}<span id=\"spani\">{cat.clicks}</span></button></li>) }\n                    </ul>\n                </div>\n                <CatView name={this.state.name} nickname={this.state.nickname} src={this.state.src} clicks={this.state.clicks} age={this.state.age} index={this.state.catIndex}/>\n               \n \n\n \n    \n                   \n            \n\n\n                \n            </div>\n\n                           \n            \n        );\n    }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\n//import Gallery from './components/Gallery';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"app\">\n        <Header />\n        <Main />\n \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}